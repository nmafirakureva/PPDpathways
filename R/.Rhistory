## # TPT.screened = screened for TB symptoms
## # TPT.asymptomatic = Negative TB symptom screening
## # TPT.eligible = eligibility for TPT
## # TPT.treated = initiated and completing TPT
## # TB.symptoms = Psotive TB symptom screening
## # TB.evaluated = evaluated for TB
## # TB.diagnosed = TB diagnosed
## # TB.treated anti-TB treatments
tree2file(SOC,filename = here('indata/CSV/SOC.csv'),
'p','cost', 'screen', 'igra', 'tpt', 'prevtb','att','check')
# rm(list=ls())
library(here)
library(HEdtree)
library(discly)
library(data.tree)
library(data.table)
library(glue)
## NOTE these packages are only needed if wanting to output graphs etc
library(BCEA)
library(ggplot2)
library(scales)
# set_here('/Users/nyashamarfirakureva/My Drive/PPD modelling/Modelling')
## === outcomes subtree ===
tb <- txt2tree(here('indata/4_TB_outcomes.txt')) # tb dx
# notb <- txt2tree(here('indata/noTB.outcomes.txt')) # no tb
tpt <- txt2tree(here('indata/3_TPT_outcomes.txt')) # tpt
## default prob/cost:
tb$Set(p=1)
notb$Set(p=1)
tpt$Set(p=1)
tb$Set(cost=0)
notb$Set(cost=0)
tpt$Set(cost=0)
# TB outcomes
tbtxo <- Node$new('TB')
tbtxo$AddChildNode(tb)
# tbtx <- Node$new('TB')
# tbtxo <- tbtx$AddChild('TB outcomes')
# no tb outcomes
notb <- Node$new('Not TB')
ltbi <- notb$AddChild('LTBI pathway')
## ====== function to add outcomes & counters
AddOutcomes <- function(D){
## === cost and probs (defaults)
D$Set(p=1)
D$Set(cost=0)
## === merge 'New people in PPDs' with 'LTBI screening pathway' to create final tree ===
MergeByName(D,notb,'Not TB', leavesonly = TRUE) # first add a branch to 'No TB' for easy merging in the next step
MergeByName(D,ltbi_pathway,'LTBI pathway',leavesonly = TRUE)
MergeByName(D,No_urgent_GP_referral,'No urgent prison GP referral',leavesonly = TRUE)
MergeByName(D,Refer_to_TB_services,'Refer to TB services',leavesonly = TRUE)
## final outcomes
MergeByName(D,tpt,'TPT outcomes',leavesonly = TRUE)
MergeByName(D,tbtxo,'TB',leavesonly = TRUE)
## ===========  other counters
## check
D$Set(check=1)
D$Set(check=0,filterFun=function(x) length(x$children)>0)
## TB screening
D$Set(screened=0)
D$Set(screened=1,filterFun=function(x) x$name=='TB screening')
## TB dx
D$Set(prevtb=0)
D$Set(prevtb=1,filterFun=function(x) x$name=='TB')
## ATT courses
D$Set(att=0)
D$Set(att=1,
filterFun=function(x)x$name=='ATT')
## tested on IGRA
D$Set(igra=0)
D$Set(igra=1,filterFun=function(x) x$name=='IGRA test')
## TPT courses
D$Set(tpt=0)
D$Set(tpt=1,
filterFun=function(x)x$name=='gets TPT')
return(D)
}
# main tree structures
new_people_in_PPDs <- txt2tree(here('indata/1.2_new_people_in_PPDs.txt'))
Refer_to_TB_services <- txt2tree(here('indata/1.2.1_Refer_to_TB_services.txt'))
No_urgent_GP_referral <- txt2tree(here('indata/1.2.2_No_urgent_GP_referral.txt'))
ltbi_pathway <- txt2tree(here('indata/2_LTBI_pathway.txt'))
## merge in extras, make model of care branches, write out
tempTree <- AddOutcomes(new_people_in_PPDs)
## === SOC
SOC <- Node$new('Standard of care pathway')
SOC$AddChildNode(tempTree)
SOC$name <- 'Standard of care pathway'
## # defining tree quantities
## # p = probability/proportion
## # cost = cost
## # tpte = eligibility for TPT. (probably not useful?)
## # tpt = tpt initiation & completion (should these be separated?)#
## # inctb = incident TB diagnosed NOTE now assuming includes non-diagnosed
## # prevtb = coprevalent TB diagnosed
## # tbdxb = bacteriologically confirmed TB. (probably not useful?)
## # tbdxc = clinical TB diagnosed. (probably not useful?)
## # att = anti-TB treatments
## # incdeaths = deaths from incident TB
## # deaths = total deaths
## # TPT.screened = screened for TB symptoms
## # TPT.asymptomatic = Negative TB symptom screening
## # TPT.eligible = eligibility for TPT
## # TPT.treated = initiated and completing TPT
## # TB.symptoms = Psotive TB symptom screening
## # TB.evaluated = evaluated for TB
## # TB.diagnosed = TB diagnosed
## # TB.treated anti-TB treatments
tree2file(SOC,filename = here('indata/CSV/SOC.csv'),
'p','cost', 'screen', 'igra', 'tpt', 'prevtb','att','check')
labdat <- c('p','cost','cost.screen',	'cost.tpt','cost.att','screen', 'igra', 'tpt','prevtb','att','check')
## ====== function to add outcomes & counters
AddOutcomes <- function(D){
## === cost and probs (defaults)
D$Set(p=1)
D$Set(cost=0)
## === merge 'New people in PPDs' with 'LTBI screening pathway' to create final tree ===
# MergeByName(D,notb,'Not TB', leavesonly = TRUE) # first add a branch to 'No TB' for easy merging in the next step
MergeByName(D,ltbi_pathway,'LTBI pathway',leavesonly = TRUE)
MergeByName(D,No_urgent_GP_referral,'No urgent prison GP referral',leavesonly = TRUE)
MergeByName(D,Refer_to_TB_services,'Refer to TB services',leavesonly = TRUE)
## final outcomes
MergeByName(D,tpt,'TPT outcomes',leavesonly = TRUE)
MergeByName(D,tbtxo,'TB',leavesonly = TRUE)
## ===========  other counters
## check
D$Set(check=1)
D$Set(check=0,filterFun=function(x) length(x$children)>0)
## TB screening
D$Set(screened=0)
D$Set(screened=1,filterFun=function(x) x$name=='TB screening')
## TB dx
D$Set(prevtb=0)
D$Set(prevtb=1,filterFun=function(x) x$name=='TB')
## ATT courses
D$Set(att=0)
D$Set(att=1,
filterFun=function(x)x$name=='ATT')
## tested on IGRA
D$Set(igra=0)
D$Set(igra=1,filterFun=function(x) x$name=='IGRA test')
## TPT courses
D$Set(tpt=0)
D$Set(tpt=1,
filterFun=function(x)x$name=='gets TPT')
return(D)
}
# main tree structures
new_people_in_PPDs <- txt2tree(here('indata/1.2_new_people_in_PPDs.txt'))
Refer_to_TB_services <- txt2tree(here('indata/1.2.1_Refer_to_TB_services.txt'))
No_urgent_GP_referral <- txt2tree(here('indata/1.2.2_No_urgent_GP_referral.txt'))
ltbi_pathway <- txt2tree(here('indata/2_LTBI_pathway.txt'))
## merge in extras, make model of care branches, write out
tempTree <- AddOutcomes(new_people_in_PPDs)
## === SOC
SOC <- Node$new('Standard of care pathway')
SOC$AddChildNode(tempTree)
SOC$name <- 'Standard of care pathway'
tree2file(SOC,filename = here('indata/CSV/SOC.csv'),
'p','cost', 'screen', 'igra', 'tpt', 'prevtb','att','check')
?MergeByName
## ====== function to add outcomes & counters
AddOutcomes <- function(D){
## === cost and probs (defaults)
D$Set(p=1)
D$Set(cost=0)
## === merge 'New people in PPDs' with 'LTBI screening pathway' to create final tree ===
# MergeByName(D,notb,'Not TB', leavesonly = TRUE) # first add a branch to 'No TB' for easy merging in the next step
MergeByName(D,ltbi_pathway,'LTBI pathway')
MergeByName(D,No_urgent_GP_referral,'No urgent prison GP referral',leavesonly = TRUE)
MergeByName(D,Refer_to_TB_services,'Refer to TB services',leavesonly = TRUE)
## final outcomes
MergeByName(D,tpt,'TPT outcomes',leavesonly = TRUE)
MergeByName(D,tbtxo,'TB',leavesonly = TRUE)
## ===========  other counters
## check
D$Set(check=1)
D$Set(check=0,filterFun=function(x) length(x$children)>0)
## TB screening
D$Set(screened=0)
D$Set(screened=1,filterFun=function(x) x$name=='TB screening')
## TB dx
D$Set(prevtb=0)
D$Set(prevtb=1,filterFun=function(x) x$name=='TB')
## ATT courses
D$Set(att=0)
D$Set(att=1,
filterFun=function(x)x$name=='ATT')
## tested on IGRA
D$Set(igra=0)
D$Set(igra=1,filterFun=function(x) x$name=='IGRA test')
## TPT courses
D$Set(tpt=0)
D$Set(tpt=1,
filterFun=function(x)x$name=='gets TPT')
return(D)
}
# main tree structures
new_people_in_PPDs <- txt2tree(here('indata/1.2_new_people_in_PPDs.txt'))
Refer_to_TB_services <- txt2tree(here('indata/1.2.1_Refer_to_TB_services.txt'))
No_urgent_GP_referral <- txt2tree(here('indata/1.2.2_No_urgent_GP_referral.txt'))
ltbi_pathway <- txt2tree(here('indata/2_LTBI_pathway.txt'))
## merge in extras, make model of care branches, write out
tempTree <- AddOutcomes(new_people_in_PPDs)
## === SOC
SOC <- Node$new('Standard of care pathway')
SOC$AddChildNode(tempTree)
SOC$name <- 'Standard of care pathway'
tree2file(SOC,filename = here('indata/CSV/SOC.csv'),
'p','cost', 'screen', 'igra', 'tpt', 'prevtb','att','check')
# rm(list=ls())
library(here)
library(HEdtree)
library(discly)
library(data.tree)
library(data.table)
library(glue)
## NOTE these packages are only needed if wanting to output graphs etc
library(BCEA)
library(ggplot2)
library(scales)
# set_here('/Users/nyashamarfirakureva/My Drive/PPD modelling/Modelling')
## === outcomes subtree ===
tb <- txt2tree(here('indata/4_TB_outcomes.txt')) # tb dx
# notb <- txt2tree(here('indata/noTB.outcomes.txt')) # no tb
tpt <- txt2tree(here('indata/3_TPT_outcomes.txt')) # tpt
## default prob/cost:
tb$Set(p=1)
notb$Set(p=1)
tpt$Set(p=1)
tb$Set(cost=0)
notb$Set(cost=0)
tpt$Set(cost=0)
# TB outcomes
tbtxo <- Node$new('TB')
tbtxo$AddChildNode(tb)
# tbtx <- Node$new('TB')
# tbtxo <- tbtx$AddChild('TB outcomes')
# no tb outcomes
notb <- Node$new('Not TB')
ltbi <- notb$AddChild('LTBI pathway')
## ====== function to add outcomes & counters
AddOutcomes <- function(D){
## === cost and probs (defaults)
D$Set(p=1)
D$Set(cost=0)
## === merge 'New people in PPDs' with 'LTBI screening pathway' to create final tree ===
# MergeByName(D,notb,'Not TB', leavesonly = TRUE) # first add a branch to 'No TB' for easy merging in the next step
MergeByName(D,No_urgent_GP_referral,'No urgent prison GP referral',leavesonly = TRUE)
MergeByName(D,Refer_to_TB_services,'Refer to TB services',leavesonly = TRUE)
MergeByName(D,ltbi_pathway,'LTBI pathway',leavesonly = TRUE)
## final outcomes
MergeByName(D,tpt,'TPT outcomes',leavesonly = TRUE)
MergeByName(D,tbtxo,'TB',leavesonly = TRUE)
## ===========  other counters
## check
D$Set(check=1)
D$Set(check=0,filterFun=function(x) length(x$children)>0)
## TB screening
D$Set(screened=0)
D$Set(screened=1,filterFun=function(x) x$name=='TB screening')
## TB dx
D$Set(prevtb=0)
D$Set(prevtb=1,filterFun=function(x) x$name=='TB')
## ATT courses
D$Set(att=0)
D$Set(att=1,
filterFun=function(x)x$name=='ATT')
## tested on IGRA
D$Set(igra=0)
D$Set(igra=1,filterFun=function(x) x$name=='IGRA test')
## TPT courses
D$Set(tpt=0)
D$Set(tpt=1,
filterFun=function(x)x$name=='gets TPT')
return(D)
}
# main tree structures
new_people_in_PPDs <- txt2tree(here('indata/1.2_new_people_in_PPDs.txt'))
Refer_to_TB_services <- txt2tree(here('indata/1.2.1_Refer_to_TB_services.txt'))
No_urgent_GP_referral <- txt2tree(here('indata/1.2.2_No_urgent_GP_referral.txt'))
ltbi_pathway <- txt2tree(here('indata/2_LTBI_pathway.txt'))
## merge in extras, make model of care branches, write out
tempTree <- AddOutcomes(new_people_in_PPDs)
## === SOC
SOC <- Node$new('Standard of care pathway')
SOC$AddChildNode(tempTree)
SOC$name <- 'Standard of care pathway'
## # defining tree quantities
## # p = probability/proportion
## # cost = cost
## # tpte = eligibility for TPT. (probably not useful?)
## # tpt = tpt initiation & completion (should these be separated?)#
## # inctb = incident TB diagnosed NOTE now assuming includes non-diagnosed
## # prevtb = coprevalent TB diagnosed
## # tbdxb = bacteriologically confirmed TB. (probably not useful?)
## # tbdxc = clinical TB diagnosed. (probably not useful?)
## # att = anti-TB treatments
## # incdeaths = deaths from incident TB
## # deaths = total deaths
## # TPT.screened = screened for TB symptoms
## # TPT.asymptomatic = Negative TB symptom screening
## # TPT.eligible = eligibility for TPT
## # TPT.treated = initiated and completing TPT
## # TB.symptoms = Psotive TB symptom screening
## # TB.evaluated = evaluated for TB
## # TB.diagnosed = TB diagnosed
## # TB.treated anti-TB treatments
tree2file(SOC,filename = here('indata/CSV/SOC.csv'),
'p','cost', 'screen', 'igra', 'tpt', 'prevtb','att','check')
labdat <- c('p','cost','cost.screen',	'cost.tpt','cost.att','screen', 'igra', 'tpt','prevtb','att','check')
# rm(list=ls())
library(here)
library(HEdtree)
library(discly)
library(data.tree)
library(data.table)
library(glue)
## NOTE these packages are only needed if wanting to output graphs etc
library(BCEA)
library(ggplot2)
library(scales)
# set_here('/Users/nyashamarfirakureva/My Drive/PPD modelling/Modelling')
## === outcomes subtree ===
tb <- txt2tree(here('indata/4_TB_outcomes.txt')) # tb dx
# notb <- txt2tree(here('indata/noTB.outcomes.txt')) # no tb
tpt <- txt2tree(here('indata/3_TPT_outcomes.txt')) # tpt
## default prob/cost:
tb$Set(p=1)
notb$Set(p=1)
tpt$Set(p=1)
tb$Set(cost=0)
notb$Set(cost=0)
tpt$Set(cost=0)
# TB outcomes
tbtxo <- Node$new('TB')
tbtxo$AddChildNode(tb)
# tbtx <- Node$new('TB')
# tbtxo <- tbtx$AddChild('TB outcomes')
# no tb outcomes
notb <- Node$new('Not TB')
ltbi <- notb$AddChild('LTBI pathway')
## ====== function to add outcomes & counters
AddOutcomes <- function(D){
## === cost and probs (defaults)
D$Set(p=1)
D$Set(cost=0)
## === merge 'New people in PPDs' with 'LTBI screening pathway' to create final tree ===
# MergeByName(D,notb,'Not TB', leavesonly = TRUE) # first add a branch to 'No TB' for easy merging in the next step
MergeByName(D,No_urgent_GP_referral,'No urgent prison GP referral',leavesonly = TRUE)
MergeByName(D,Refer_to_TB_services,'Refer to TB services',leavesonly = TRUE)
MergeByName(D,ltbi_pathway,'LTBI pathway',leavesonly = TRUE)
## final outcomes
MergeByName(D,tpt,'TPT outcomes',leavesonly = TRUE)
MergeByName(D,tbtxo,'TB',leavesonly = TRUE)
## ===========  other counters
## check
D$Set(check=1)
D$Set(check=0,filterFun=function(x) length(x$children)>0)
## TB screening
D$Set(screened=0)
D$Set(screened=1,filterFun=function(x) x$name=='TB screening')
## TB dx
D$Set(prevtb=0)
D$Set(prevtb=1,filterFun=function(x) x$name=='TB')
## ATT courses
D$Set(att=0)
D$Set(att=1,
filterFun=function(x)x$name=='ATT')
## tested on IGRA
D$Set(igra=0)
D$Set(igra=1,filterFun=function(x) x$name=='IGRA test')
## TPT courses
D$Set(tpt=0)
D$Set(tpt=1,
filterFun=function(x)x$name=='gets TPT')
return(D)
}
# main tree structures
new_people_in_PPDs <- txt2tree(here('indata/1.2_new_people_in_PPDs.txt'))
Refer_to_TB_services <- txt2tree(here('indata/1.2.1_Refer_to_TB_services.txt'))
No_urgent_GP_referral <- txt2tree(here('indata/1.2.2_No_urgent_GP_referral.txt'))
ltbi_pathway <- txt2tree(here('indata/2_LTBI_pathway.txt'))
## merge in extras, make model of care branches, write out
tempTree <- AddOutcomes(new_people_in_PPDs)
## === SOC
SOC <- Node$new('Standard of care pathway')
SOC$AddChildNode(tempTree)
SOC$name <- 'Standard of care pathway'
## # defining tree quantities
## # p = probability/proportion
## # cost = cost
## # tpte = eligibility for TPT. (probably not useful?)
## # tpt = tpt initiation & completion (should these be separated?)#
## # inctb = incident TB diagnosed NOTE now assuming includes non-diagnosed
## # prevtb = coprevalent TB diagnosed
## # tbdxb = bacteriologically confirmed TB. (probably not useful?)
## # tbdxc = clinical TB diagnosed. (probably not useful?)
## # att = anti-TB treatments
## # incdeaths = deaths from incident TB
## # deaths = total deaths
## # TPT.screened = screened for TB symptoms
## # TPT.asymptomatic = Negative TB symptom screening
## # TPT.eligible = eligibility for TPT
## # TPT.treated = initiated and completing TPT
## # TB.symptoms = Psotive TB symptom screening
## # TB.evaluated = evaluated for TB
## # TB.diagnosed = TB diagnosed
## # TB.treated anti-TB treatments
tree2file(SOC,filename = here('indata/CSV/SOC.csv'),
'p','cost', 'screen', 'igra', 'tpt', 'prevtb','att','check')
# rm(list=ls())
library(here)
library(HEdtree)
library(discly)
library(data.tree)
library(data.table)
library(glue)
## NOTE these packages are only needed if wanting to output graphs etc
library(BCEA)
library(ggplot2)
library(scales)
# set_here('/Users/nyashamarfirakureva/My Drive/PPD modelling/Modelling')
## === outcomes subtree ===
tb <- txt2tree(here('indata/4_TB_outcomes.txt')) # tb dx
# notb <- txt2tree(here('indata/noTB.outcomes.txt')) # no tb
tpt <- txt2tree(here('indata/3_TPT_outcomes.txt')) # tpt
## default prob/cost:
tb$Set(p=1)
notb$Set(p=1)
tpt$Set(p=1)
tb$Set(cost=0)
notb$Set(cost=0)
tpt$Set(cost=0)
# TB outcomes
tbtxo <- Node$new('TB')
tbtxo$AddChildNode(tb)
# tbtx <- Node$new('TB')
# tbtxo <- tbtx$AddChild('TB outcomes')
# no tb outcomes
notb <- Node$new('Not TB')
ltbi <- notb$AddChild('LTBI pathway')
## ====== function to add outcomes & counters
AddOutcomes <- function(D){
## === cost and probs (defaults)
D$Set(p=1)
D$Set(cost=0)
## === merge 'New people in PPDs' with 'LTBI screening pathway' to create final tree ===
# MergeByName(D,notb,'Not TB', leavesonly = TRUE) # first add a branch to 'No TB' for easy merging in the next step
MergeByName(D,No_urgent_GP_referral,'No urgent prison GP referral',leavesonly = TRUE)
MergeByName(D,Refer_to_TB_services,'Refer to TB services',leavesonly = TRUE)
MergeByName(D,ltbi_pathway,'LTBI pathway',leavesonly = TRUE)
## final outcomes
MergeByName(D,tpt,'TPT outcomes',leavesonly = TRUE)
MergeByName(D,tbtxo,'TB',leavesonly = TRUE)
## ===========  other counters
## check
D$Set(check=1)
D$Set(check=0,filterFun=function(x) length(x$children)>0)
## TB screening
D$Set(screened=0)
D$Set(screened=1,filterFun=function(x) x$name=='TB screening')
## TB dx
D$Set(prevtb=0)
D$Set(prevtb=1,filterFun=function(x) x$name=='TB')
## ATT courses
D$Set(att=0)
D$Set(att=1,
filterFun=function(x)x$name=='ATT')
## tested on IGRA
D$Set(igra=0)
D$Set(igra=1,filterFun=function(x) x$name=='IGRA test')
## TPT courses
D$Set(tpt=0)
D$Set(tpt=1,
filterFun=function(x)x$name=='gets TPT')
return(D)
}
# main tree structures
new_people_in_PPDs <- txt2tree(here('indata/1.2_new_people_in_PPDs.txt'))
Refer_to_TB_services <- txt2tree(here('indata/1.2.1_Refer_to_TB_services.txt'))
No_urgent_GP_referral <- txt2tree(here('indata/1.2.2_No_urgent_GP_referral.txt'))
ltbi_pathway <- txt2tree(here('indata/2_LTBI_pathway.txt'))
## merge in extras, make model of care branches, write out
tempTree <- AddOutcomes(new_people_in_PPDs)
## === SOC
SOC <- Node$new('Standard of care pathway')
SOC$AddChildNode(tempTree)
SOC$name <- 'Standard of care pathway'
## # defining tree quantities
## # p = probability/proportion
## # cost = cost
## # tpte = eligibility for TPT. (probably not useful?)
## # tpt = tpt initiation & completion (should these be separated?)#
## # inctb = incident TB diagnosed NOTE now assuming includes non-diagnosed
## # prevtb = coprevalent TB diagnosed
## # tbdxb = bacteriologically confirmed TB. (probably not useful?)
## # tbdxc = clinical TB diagnosed. (probably not useful?)
## # att = anti-TB treatments
## # incdeaths = deaths from incident TB
## # deaths = total deaths
## # TPT.screened = screened for TB symptoms
## # TPT.asymptomatic = Negative TB symptom screening
## # TPT.eligible = eligibility for TPT
## # TPT.treated = initiated and completing TPT
## # TB.symptoms = Psotive TB symptom screening
## # TB.evaluated = evaluated for TB
## # TB.diagnosed = TB diagnosed
## # TB.treated anti-TB treatments
tree2file(SOC,filename = here('indata/CSV/SOC.csv'),
'p','cost', 'screen', 'igra', 'tpt', 'prevtb','att','check')
labdat <- c('p','cost','cost.screen',	'cost.tpt','cost.att','screen', 'igra', 'tpt','prevtb','att','check')
